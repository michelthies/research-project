==================== PROMPT ====================



Current Booking Object:
{
  "booking": {
    "status": null,
    "artist": {
      "name": null
    },
    "promoter": {
      "name": null,
      "company": null,
      "address": null
    },
    "event": {
      "date": null,
      "name": null,
      "city": null,
      "venue": null,
      "capacity": null,
      "ticketPrice": null,
      "openingTime": null,
      "closingTime": null,
      "stageTime": {
        "start": null,
        "end": null
      }
    },
    "invoice": {
      "amount": null,
      "status": null
    },
    "contract": {
      "status": null
    }
  }
}

New Message:
From: Olivia Chen <olivia@clubstellar.se>
Subject: DJ Meteor - Stockholm
Date: 8. July 2022 at 11:36:20 GMT+2
To: Mike Muller <mike@stellarbookings.com>

HELLO!!

Is she available for a daytime sessions in stockholm with DJ Pulse, Sofia Nyberg and Novawave the 6th of august? :)

xx
Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


==================== RESPONSE ====================

{
  "booking": {
    "status": "inquiry",
    "artist": {
      "name": "DJ Meteor"
    },
    "promoter": {
      "name": null,
      "company": null,
      "address": null
    },
    "event": {
      "date": "2022-08-06",
      "name": null,
      "city": "Stockholm",
      "venue": null,
      "capacity": null,
      "ticketPrice": null,
      "openingTime": null,
      "closingTime": null,
      "stageTime": {
        "start": null,
        "end": null
      }
    },
    "invoice": {
      "amount": null,
      "status": null
    },
    "contract": {
      "status": null
    }
  }
}

==================== PROMPT ====================



Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":null,"address":null},"event":{"date":"2022-08-06","name":null,"city":"Stockholm","venue":null,"capacity":null,"ticketPrice":null,"openingTime":null,"closingTime":null,"stageTime":{"start":null,"end":null}},"invoice":{"amount":null,"status":null},"contract":{"status":null}}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 12. July 2022 at 18:39:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

hey olivia,

could definitely work.

do you have these infos?

city:
venue name: 
event name: 
date of event:
doors open/close: 
requested slot: 
requested stage:
number of rooms/stages:
total capacity:
stage capacity:
ticket price: 
sponsoring:
line up: 
offer:


best
Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


==================== RESPONSE ====================

{
"booking": {
    "status": "inquiry",
    "artist": {
        "name": "DJ Meteor"
    },
    "promoter": {
        "name": null,
        "company": null,
        "address": null
    },
    "event": {
        "date": "2022-08-06",
        "city": "Stockholm",
        "venue": null,
        "name": null,
        "capacity": null,
        "ticketPrice": null,
        "openingTime": null,
        "closingTime": null,
        "stageTime": {
            "start": null,
            "end": null
        }
    },
    "invoice": {
        "amount": null,
        "status": null
    },
    "contract": {
        "status": null
    }
},
"newMessage": {
    "from": "Mike Muller",
    "subject": "Re: DJ Meteor - Stockholm",
    "date": "2022-07-12T18:39:00Z"
}
}

==================== PROMPT ====================



Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":null,"address":null},"event":{"date":"2022-08-06","city":"Stockholm","venue":null,"name":null,"capacity":null,"ticketPrice":null,"openingTime":null,"closingTime":null,"stageTime":{"start":null,"end":null}},"invoice":{"amount":null,"status":null},"contract":{"status":null}},"newMessage":{"from":"Mike Muller","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-12T18:39:00Z"}}

New Message:
From: Olivia Chen <olivia@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 14. July 2022 at 12:05:44 GMT+2
To: Mike Muller <mike@stellarbookings.com>

With DJ Pulse, Novawave & Sofia Nyberg

20-22

offer 1000 ++++ 

COSMIC GARDEN
Venue Name: Cosmic Garden 
Venue Full Address: Hammarby Slussväg 2
Venue Phone Number: 0046 (0) 8 644 20 23
Venue Email: info@clubstellar.se
Capacity of the room where the artist would play: 500 
Venue Capacity: 1800 
Venue Doors Open: 17:00 
Venue Doors Close: 03:00
Soundsystem specification in this room: Function One + Custom made Sound roof (ask for specification) 


Any sound restrictions: No (but curfew has to be held!!) 

Past Guests in the last 6 months: Regis, DJ Bone, Taakaki Itoh, Exos, Tijana T, DJ Stingray, Matrixxman, Abdulla Rashim, Baba Stiltz, Janina and more....... Check website for more info please. 

Average ticket price: around 15€, free before 22

Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


==================== RESPONSE ====================

{
"booking": {
"status": "inquiry",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Club Stellar",
"company": null,
"address": "Hammarby Slussväg 2"
},
"event": {
"date": "2022-07-20",
"city": "Stockholm",
"venue": "Cosmic Garden",
"name": null,
"capacity": 500,
"ticketPrice": 15,
"openingTime": "17:00",
"closingTime": "03:00",
"stageTime": {
"start": null,
"end": null
}
},
"timeframe": {
"openingTime": "17:00",
"closingTime": "03:00"
},
"contract": {
"status": null
},
"invoice": {
"amount": null,
"status": null
}
},
"newMessage": {
"from": "Olivia Chen",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-07-14T12:05:44Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":"Club Stellar","company":null,"address":"Hammarby Slussväg 2"},"event":{"date":"2022-07-20","city":"Stockholm","venue":"Cosmic Garden","name":null,"capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":null,"end":null}},"timeframe":{"openingTime":"17:00","closingTime":"03:00"},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"newMessage":{"from":"Olivia Chen","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-14T12:05:44Z"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 18. July 2022 at 00:54:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

hey olivia,

thanks for the infos.

we would be looking for at least 1500+++ here.
can you make it work?

best
Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/event/openingTime must match format "date-time" (actual: 17:00)
2. /booking/event/closingTime must match format "date-time" (actual: 03:00)
3. booking.timeframe: Field not defined in schema

Context Errors:
1. booking.promoter.name: Incorrect value: Club Stellar
2. booking.event.date: Incorrect value: 2022-07-20
3. booking.event.name: Missing field
4. booking.event.capacity: Incorrect value: 500
5. booking.event.stageTime.start: Missing field
6. booking.event.stageTime.end: Missing field
7. booking.invoice.amount: Missing field
8. booking.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

{
"booking": {
"status": "inquiry",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Club Stellar",
"company": null,
"address": "Hammarby Slussväg 2"
},
"event": {
"date": "2022-07-20",
"city": "Stockholm",
"venue": "Cosmic Garden",
"name": null,
"capacity": 1500,
"ticketPrice": 15.0,
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z",
"stageTime": {
"start": null,
"end": null
}
},
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"contract": {
"status": null
},
"invoice": {
"amount": null,
"status": null
}
},
"newMessage": {
"from": "Mike Muller",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-07-18T00:54:00Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":"Club Stellar","company":null,"address":"Hammarby Slussväg 2"},"event":{"date":"2022-07-20","city":"Stockholm","venue":"Cosmic Garden","name":null,"capacity":1500,"ticketPrice":15,"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z","stageTime":{"start":null,"end":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"newMessage":{"from":"Mike Muller","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-18T00:54:00Z"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 18. July 2022 at 23:53:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

hey olivia,

sounds good, im sure we could make that work.


best
Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.timeframe: Field not defined in schema

Context Errors:
1. booking.promoter.name: Incorrect value: Club Stellar
2. booking.event.date: Incorrect value: 2022-07-20
3. booking.event.name: Missing field
4. booking.event.capacity: Incorrect value: 1500
5. booking.event.stageTime.start: Missing field
6. booking.event.stageTime.end: Missing field
7. booking.invoice.amount: Missing field
8. booking.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

{
"booking": {
"status": "inquiry",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Club Stellar"
},
"event": {
"date": "2022-07-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 1500,
"ticketPrice": 15.0,
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z",
"stageTime": {
"start": null,
"end": null
}
},
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"contract": {
"status": null
},
"invoice": {
"amount": null,
"status": null
}
},
"newMessage": {
"from": "Mike Muller",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-07-18T00:54:00Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":"Club Stellar"},"event":{"date":"2022-07-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z","stageTime":{"start":null,"end":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"newMessage":{"from":"Mike Muller","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-18T00:54:00Z"}}

New Message:

From: Olivia Chen <olivia@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 19. July 2022 at 08:26:14 GMT+2
To: Mike Muller <mike@stellarbookings.com>

I need to announce this week :) 

Looping in Luna on CC for logistics. 

CONTACT
Contact Name Person (You): Olivia Chen 
Contact Email: olivia@clubstellar.se
Contact Cell phone: +46704671462

PROMOTER/COMPANY
Promoter Company Name: Nova Entertainment
Represented by: Club Stellar
Company Full Address (City): Hammarby Slussväg 2
Promoter Cell phone: +46704058257
Promoter Email: olivia@clubstellar.se
Company Website: www.clubstellar.com
VAT Number (Important): SE 556785-1901-01
ORG NUMMER. 556785-1901 

Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.timeframe: Field not defined in schema

Context Errors:
1. booking.promoter.name: Incorrect value: Club Stellar
2. booking.promoter.company: Missing field
3. booking.promoter.address: Missing field
4. booking.event.date: Incorrect value: 2022-07-20
5. booking.event.name: Missing field
6. booking.event.capacity: Incorrect value: 1500
7. booking.event.stageTime.start: Missing field
8. booking.event.stageTime.end: Missing field
9. booking.invoice.amount: Missing field
10. booking.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

{
"booking": {
"status": "inquiry",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": null,
"company": "Nova Entertainment",
"address": "Hammarby Slussväg 2, Stockholm",
"contact": {
"email": "olivia@clubstellar.se",
"cellphone": "+46704671462"
}
},
"event": {
"date": "2022-07-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 1500,
"ticketPrice": 15.0,
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"stageTime": {
"start": null,
"end": null
}
},
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"contract": {
"status": null
},
"invoice": {
"amount": null,
"status": null
}
},
"newMessage": {
"from": "Olivia Chen",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-07-19T08:26:14Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"olivia@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":"2022-07-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"stageTime":{"start":null,"end":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"newMessage":{"from":"Olivia Chen","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-19T08:26:14Z"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 20. July 2022 at 21:15:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

works for her, lets confirm :)

Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.promoter.contact: Field not defined in schema
2. booking.event.timeframe: Field not defined in schema
3. booking.timeframe: Field not defined in schema

Context Errors:
1. booking.promoter.name: Missing field
2. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
3. booking.event.date: Incorrect value: 2022-07-20
4. booking.event.name: Missing field
5. booking.event.capacity: Incorrect value: 1500
6. booking.event.openingTime: Missing field
7. booking.event.closingTime: Missing field
8. booking.event.stageTime.start: Missing field
9. booking.event.stageTime.end: Missing field
10. booking.invoice.amount: Missing field
11. booking.promoter.contact: Value does not match expected format or requirements
12. booking.event.timeframe: Value does not match expected format or requirements
13. booking.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

{
"booking": {
"status": "confirmed",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": null,
"company": "Nova Entertainment",
"address": "Hammarby Slussväg 2, Stockholm",
"contact": {
"email": "olivia@clubstellar.se",
"cellphone": "+46704671462"
}
},
"event": {
"date": "2022-07-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 1500,
"ticketPrice": 15,
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"stageTime": {
"start": null,
"end": null
}
},
"contract": {
"status": null
},
"invoice": {
"amount": null,
"status": null
}
},
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"newMessage": {
"from": "Mike Muller",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-07-20T21:15:00Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"olivia@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":"2022-07-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"stageTime":{"start":null,"end":null}},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"newMessage":{"from":"Mike Muller","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-20T21:15:00Z"}}

New Message:
From: Luna Garcia <luna@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 21. July 2022 at 12:07:27 GMT+2
To: Olivia Chen <olivia@clubstellar.se>
Cc: Mike Muller <mike@stellarbookings.com>

Hi Mike,

Could you please send me:
- Their most up to date hospitality and technical rider
- Flight request (we will send you suggestions if you provide us with departure address and preferred timings) 
- Check in luggage or not


Best,
Luna

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.promoter.contact: Field not defined in schema
2. booking.event.timeframe: Field not defined in schema

Context Errors:
1. booking.promoter.name: Missing field
2. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
3. booking.event.date: Incorrect value: 2022-07-20
4. booking.event.name: Missing field
5. booking.event.capacity: Incorrect value: 1500
6. booking.event.openingTime: Missing field
7. booking.event.closingTime: Missing field
8. booking.event.stageTime.start: Missing field
9. booking.event.stageTime.end: Missing field
10. booking.invoice.amount: Missing field
11. booking.invoice.status: Missing field
12. booking.contract.status: Missing field
13. booking.promoter.contact: Value does not match expected format or requirements
14. booking.event.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

{
    "booking": {
        "status": null,
        "artist": {
            "name": "DJ Meteor"
        },
        "promoter": {
            "name": null,
            "company": "Nova Entertainment",
            "address": "Hammarby Slussväg 2, Stockholm",
            "contact": {
                "email": "luna@clubstellar.se",
                "cellphone": "+46704671462"
            }
        },
        "event": {
            "date": null,
            "name": null,
            "city": "Stockholm",
            "venue": "Cosmic Garden",
            "capacity": 1500,
            "ticketPrice": 15,
            "timeframe": {
                "openingTime": null,
                "closingTime": null
            },
            "stageTime": {
                "start": null,
                "end": null
            }
        },
        "contract": {
            "status": null
        },
        "invoice": {
            "amount": null,
            "status": null
        }
    },
    "timeframe": {
        "openingTime": "2022-07-20T17:00:00Z",
        "closingTime": "2022-07-20T03:00:00Z"
    },
    "newMessage": {
        "from": "Luna Garcia",
        "subject": "Re: DJ Meteor - Stockholm",
        "date": "2022-07-21T12:07:27Z"
    }
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"luna@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":null,"name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":null,"closingTime":null},"stageTime":{"start":null,"end":null}},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"newMessage":{"from":"Luna Garcia","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-21T12:07:27Z"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 23. July 2022 at 16:17:00 GMT+2
To: Luna Garcia <luna@clubstellar.se>
Cc: Olivia Chen <olivia@clubstellar.se>

hey luna,

please book hotel with double bed (kingsize)

- Flight request:
london - stockholm - berlin
only handluggage

Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.promoter.contact: Field not defined in schema
2. booking.event.timeframe: Field not defined in schema

Context Errors:
1. booking.status: Missing field
2. booking.promoter.name: Missing field
3. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
4. booking.event.date: Missing field
5. booking.event.name: Missing field
6. booking.event.capacity: Incorrect value: 1500
7. booking.event.openingTime: Missing field
8. booking.event.closingTime: Missing field
9. booking.event.stageTime.start: Missing field
10. booking.event.stageTime.end: Missing field
11. booking.invoice.amount: Missing field
12. booking.invoice.status: Missing field
13. booking.contract.status: Missing field
14. booking.promoter.contact: Value does not match expected format or requirements
15. booking.event.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

{
"booking": {
"status": null,
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Nova Entertainment",
"company": "Nova Entertainment",
"address": "Hammarby Slussväg 2, Stockholm",
"contact": {
"email": "luna@clubstellar.se",
"cellphone": "+46704671462"
}
},
"event": {
"date": null,
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 1500,
"ticketPrice": 15,
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"stageTime": {
"start": null,
"end": null
}
},
"contract": {
"status": null
},
"invoice": {
"amount": null,
"status": null
}
},
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"newMessage": {
"from": "Mike Muller",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-07-23T16:17:00Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":"Nova Entertainment","company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"luna@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":null,"name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"stageTime":{"start":null,"end":null}},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"newMessage":{"from":"Mike Muller","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-23T16:17:00Z"}}

New Message:
From: Luna Garcia <luna@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 31. July 2022 at 21:02:16 GMT+2
To: Mike Muller <mike@stellarbookings.com>
Cc: Olivia Chen <olivia@clubstellar.se>

Hi Mike, 

Please see flight ticket attached and all updated info below:

FLIGHTS
6th Aug 
FLIGHT NO: D84456 (14:10 London-Gatwick -17:45 Stockholm-Arlanda (2h35m)

7th Aug
FLIGHT NO: SK 2677 (Stockholm ARN- Berlin BER 13:00- 14:30 (1h 30m)

ARTIST LIAISON 
Olivia Chen +46 70-467 14 62
Marco Rivera +46 70-330 51 44
 
GROUND TRANSPORT
NordTaxi (company) +46 855013188
 
NAME: Emily Webb + +49176 32742979 
DATE: 6 Aug
TIME: 17.45
WHERE: Arlanda - (Driver wait w sign by arrivals exit) 
TO: Straight to venue/Hotel?
FLIGHT NO: D84456 (14:10 London-Gatwick -17:45 Stockholm-Arlanda (2h35m)

NAME: Emily Webb + +49176 32742979 
DATE: 7 aug
TIME: 09.45
WHERE: Horizon Hotel, Ringvägen 98 (Driver wait w sign by hotel exit) 
TO: Arlanda - 
FLIGHT NO: SK 2677 (Stockholm ARN- Berlin BER 13:00- 14:30 (1h 30m)
 
Nearest Airport: Stockholm Arlanda Airport
Distance Airport - Hotel (km/h): around 45min - 1,15h depending on traffic
Distance Airport - Venue (km/h): around 45min - 1,15h depending on traffic
Distance Hotel - Venue (km/h): 5 min walk, or 5 min taxi
 
HOTEL 
Horizon Hotel Stockholm
Ringvägen 98, 104 60 Stockholm, Sweden 
TEL: +46 8 462 10 00
WEBB: https://www.horizonhotels.com/hotels/sweden/stockholm/horizon-hotel-stockholm/
BOOKING REF: 2059R008892 - Emily Webb
 
RUNNING ORDER 
DTS:
14-17 SOFIA NYBERG
17-19 DJ PULSE
19-20 NOVAWAVE (LIVE)
20-22 DJ METEOR
NTS:
22-03 COSMIC UNITY EVENT 
 
DINNER 
22.00 @ Greenspace, fine dining vegan restaurant at the venue

FB: https://fb.me/e/2PYarQLHm
RA: https://ra.co/events/1565693


Best,
Luna


Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.promoter.contact: Field not defined in schema
2. booking.event.timeframe: Field not defined in schema

Context Errors:
1. booking.status: Missing field
2. booking.promoter.name: Incorrect value: Nova Entertainment
3. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
4. booking.event.date: Missing field
5. booking.event.name: Missing field
6. booking.event.capacity: Incorrect value: 1500
7. booking.event.openingTime: Missing field
8. booking.event.closingTime: Missing field
9. booking.event.stageTime.start: Missing field
10. booking.event.stageTime.end: Missing field
11. booking.invoice.amount: Missing field
12. booking.invoice.status: Missing field
13. booking.contract.status: Missing field
14. booking.promoter.contact: Value does not match expected format or requirements
15. booking.event.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

Here is the updated booking object:

{
    "booking": {
        "status": null,
        "artist": {
            "name": "DJ Meteor"
        },
        "promoter": {
            "name": "Nova Entertainment",
            "company": "Nova Entertainment",
            "address": "Hammarby Slussväg 2, Stockholm",
            "contact": {
                "email": "luna@clubstellar.se",
                "cellphone": "+46704671462"
            }
        },
        "event": {
            "date": null,
            "name": null,
            "city": "Stockholm",
            "venue": "Cosmic Garden",
            "capacity": 1500,
            "ticketPrice": 15,
            "timeframe": {
                "openingTime": "2022-07-20T17:00:00Z",
                "closingTime": "2022-07-20T03:00:00Z"
            },
            "stageTime": {
                "start": null,
                "end": null
            }
        },
        "contract": {
            "status": null
        },
        "invoice": {
            "amount": null,
            "status": null
        }
    },
    "timeframe": {
        "openingTime": "2022-07-20T17:00:00Z",
        "closingTime": "2022-07-20T03:00:00Z"
    },
    "newMessage": {
        "from": "Luna Garcia",
        "subject": "Re: DJ Meteor - Stockholm",
        "date": "2022-07-31T21:02:16Z"
    }
}

Note that I did not include the flight information, as it is not relevant to the booking object.

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":"Nova Entertainment","company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"luna@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":null,"name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"stageTime":{"start":null,"end":null}},"contract":{"status":null},"invoice":{"amount":null,"status":null}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"newMessage":{"from":"Luna Garcia","subject":"Re: DJ Meteor - Stockholm","date":"2022-07-31T21:02:16Z"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 8. August 2022 at 12:23:00 GMT+2
To: Luna Garcia <luna@clubstellar.se>
Cc: Olivia Chen <olivia@clubstellar.se>

hey luna,

hope all is well.

find the artist fee invoice attached.
the booking fee will follow.


best


Best,
________________________

Mike Muller
Booking
mobile: +491634523464

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.promoter.contact: Field not defined in schema
2. booking.event.timeframe: Field not defined in schema

Context Errors:
1. booking.status: Missing field
2. booking.promoter.name: Incorrect value: Nova Entertainment
3. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
4. booking.event.date: Missing field
5. booking.event.name: Missing field
6. booking.event.capacity: Incorrect value: 1500
7. booking.event.openingTime: Missing field
8. booking.event.closingTime: Missing field
9. booking.event.stageTime.start: Missing field
10. booking.event.stageTime.end: Missing field
11. booking.invoice.amount: Missing field
12. booking.invoice.status: Missing field
13. booking.contract.status: Missing field
14. booking.promoter.contact: Value does not match expected format or requirements
15. booking.event.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

Here is the updated JSON object:

{
"booking": {
"status": "inquiry",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Nova Entertainment",
"company": "Nova Entertainment",
"address": "Hammarby Slussväg 2, Stockholm",
"contact": {
"email": "luna@clubstellar.se",
"cellphone": "+46704671462"
}
},
"event": {
"date": null,
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 1500,
"ticketPrice": 15,
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": null
},
"stageTime": {
"start": null,
"end": null
}
},
"contract": {
"status": null
},
"invoice": {
"amount": 0,
"status": "not sent"
}
},
"timeframe": {
"openingTime": "2022-07-20T17:00:00Z",
"closingTime": "2022-07-20T03:00:00Z"
},
"newMessage": {
"from": "Mike Muller",
"subject": "Re: DJ Meteor - Stockholm",
"date": "2022-08-08T12:23:00Z"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"inquiry","artist":{"name":"DJ Meteor"},"promoter":{"name":"Nova Entertainment","company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"luna@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":null,"name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":null},"stageTime":{"start":null,"end":null}},"contract":{"status":null},"invoice":{"amount":0,"status":"not sent"}},"timeframe":{"openingTime":"2022-07-20T17:00:00Z","closingTime":"2022-07-20T03:00:00Z"},"newMessage":{"from":"Mike Muller","subject":"Re: DJ Meteor - Stockholm","date":"2022-08-08T12:23:00Z"}}

New Message:
From: Olivia Chen <olivia@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 8. August 2022 at 12:24:46 GMT+2
To: Mike Muller <mike@stellarbookings.com>
Cc: Luna Garcia <luna@clubstellar.se>

Set for payment!

Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. booking.promoter.contact: Field not defined in schema
2. booking.event.timeframe: Field not defined in schema

Context Errors:
1. booking.status: Incorrect value: inquiry
2. booking.promoter.name: Incorrect value: Nova Entertainment
3. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
4. booking.event.date: Missing field
5. booking.event.name: Missing field
6. booking.event.capacity: Incorrect value: 1500
7. booking.event.openingTime: Missing field
8. booking.event.closingTime: Missing field
9. booking.event.stageTime.start: Missing field
10. booking.event.stageTime.end: Missing field
11. booking.promoter.contact: Value does not match expected format or requirements
12. booking.event.timeframe: Value does not match expected format or requirements
13. booking.contract: Value does not match expected format or requirements
14. booking.invoice: Value does not match expected format or requirements



==================== RESPONSE ====================

{
    "booking": {
        "status": "set for payment",
        "artist": {
            "name": "DJ Meteor"
        },
        "promoter": {
            "name": "Nova Entertainment",
            "company": "Nova Entertainment",
            "address": "Hammarby Slussväg 2, Stockholm",
            "contact": {
                "email": "luna@clubstellar.se",
                "cellphone": "+46704671462"
            }
        },
        "event": {
            "date": null,
            "name": null,
            "city": "Stockholm",
            "venue": "Cosmic Garden",
            "capacity": 1500,
            "ticketPrice": 15,
            "timeframe": {
                "openingTime": "2022-08-20T12:00:00Z",
                "closingTime": "2022-08-20T03:00:00Z"
            },
            "stageTime": {
                "start": null,
                "end": null
            }
        },
        "contract": {
            "status": null
        },
        "invoice": {
            "amount": 0,
            "status": "not sent"
        }
    },
    "timeframe": {
        "openingTime": "2022-08-20T12:00:00Z",
        "closingTime": "2022-08-20T03:00:00Z"
    },
    "newMessage": {
        "from": "Olivia Chen",
        "subject": "Re: DJ Meteor - Stockholm",
        "date": "2022-08-08T12:24:46Z"
    }
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"set for payment","artist":{"name":"DJ Meteor"},"promoter":{"name":"Nova Entertainment","company":"Nova Entertainment","address":"Hammarby Slussväg 2, Stockholm","contact":{"email":"luna@clubstellar.se","cellphone":"+46704671462"}},"event":{"date":null,"name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":1500,"ticketPrice":15,"timeframe":{"openingTime":"2022-08-20T12:00:00Z","closingTime":"2022-08-20T03:00:00Z"},"stageTime":{"start":null,"end":null}},"contract":{"status":null},"invoice":{"amount":0,"status":"not sent"}},"timeframe":{"openingTime":"2022-08-20T12:00:00Z","closingTime":"2022-08-20T03:00:00Z"},"newMessage":{"from":"Olivia Chen","subject":"Re: DJ Meteor - Stockholm","date":"2022-08-08T12:24:46Z"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 21. September 2022 at 18:13:12 GMT+2
To: Luna Garcia <luna@clubstellar.se>
Cc: Olivia Chen <olivia@clubstellar.se>

hey luna,

payment received.

Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.


## CLASSIFICATION TAXONOMY
- BOOKING: Status indicators including "inquiry", "confirmed", "cancelled"
- ARTIST: Performance names, artist identifiers, talent references, band names, DJ monikers
- PROMOTER: Organization names, company identifiers, agency references, contact details, addresses
- EVENT: 
  * VENUE: Establishment names, club references, hall identifiers, location markers
  * TEMPORAL: Dates in various formats (DD.MM.YYYY, MM/DD/YYYY, YYYY-MM-DD)
  * DESCRIPTORS: Festival names, concert titles, performance identifiers
  * METRICS: Capacity figures, attendance projections, audience size
  * PRICING: Ticket costs, entry fees, admission prices
- TIMEFRAME: Opening/closing times, stage times, performance slots
- FINANCIAL: Fee amounts, payment terms
- CONTRACT: Document status terms like "not sent", "sent", "signed", "cosigned"
- INVOICE: Payment status terms like "not sent", "sent", "paid"

## ACTION PROTOCOL
ANALYZE: Parse email content for booking-related information and updates
IDENTIFY: Find all relevant entities in the email that match schema properties
EXTRACT: Pull out the associated values and context for each entity
TRANSFORM: 
  - Standardize dates to ISO format: YYYY-MM-DD (example: 2025-11-25)
  - Standardize times to ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T20:00:00Z)
  - Normalize status values to schema-compliant enumerations only
  - Convert numerical values appropriately (capacity and ticketPrice as numbers)

CONTEXTUALIZE:
  - PRESERVE existing data from previous extraction when not contradicted
  - UPDATE values explicitly mentioned in current email
  - RESOLVE conflicts by prioritizing most recent information
  - MAINTAIN relational integrity between entities

VERIFY:
  - Ensure all values match expected data types per schema
  - Verify enum values match ONLY allowed options in schema
  - Validate date and time formats to ISO standards
  - Set missing or invalid values to null rather than omitting them

CONSTRUCT:
  - Build JSON structure exactly according to schema specification
  - Include all properties defined in the schema, using null for missing values
  - Ensure proper JSON syntax with quotes around keys and string values
  - Format numbers without quotes


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/status must be equal to one of the allowed values (actual: set for payment)
2. /booking/status must be null (actual: set for payment)
3. /booking/status must match exactly one schema in oneOf (actual: set for payment)
4. booking.promoter.contact: Field not defined in schema
5. booking.event.timeframe: Field not defined in schema

Context Errors:
1. booking.status: Incorrect value: set for payment
2. booking.promoter.name: Incorrect value: Nova Entertainment
3. booking.promoter.address: Incorrect value: Hammarby Slussväg 2, Stockholm
4. booking.event.date: Missing field
5. booking.event.name: Missing field
6. booking.event.capacity: Incorrect value: 1500
7. booking.event.openingTime: Missing field
8. booking.event.closingTime: Missing field
9. booking.event.stageTime.start: Missing field
10. booking.event.stageTime.end: Missing field
11. booking.invoice.amount: Missing field
12. booking.contract.status: Missing field
13. booking.promoter.contact: Value does not match expected format or requirements
14. booking.event.timeframe: Value does not match expected format or requirements



==================== RESPONSE ====================

Here is the updated booking object:

{
    "booking": {
        "status": "confirmed",
        "artist": {
            "name": "DJ Meteor"
        },
        "promoter": {
            "name": "Nova Entertainment",
            "company": "Nova Entertainment",
            "address": "Hammarby Slussväg 2, Stockholm",
            "contact": {
                "email": "luna@clubstellar.se",
                "cellphone": "+46704671462"
            }
        },
        "event": {
            "date": null,
            "name": null,
            "city": "Stockholm",
            "venue": "Cosmic Garden",
            "capacity": 1500,
            "ticketPrice": 15,
            "timeframe": {
                "openingTime": "2022-08-20T12:00:00Z",
                "closingTime": "2022-08-20T03:00:00Z"
            },
            "stageTime": {
                "start": null,
                "end": null
            }
        },
        "contract": {
            "status": null
        },
        "invoice": {
            "amount": 0,
            "status": "paid"
        }
    },
    "timeframe": {
        "openingTime": "2022-08-20T12:00:00Z",
        "closingTime": "2022-08-20T03:00:00Z"
    },
    "newMessage": {
        "from": "Mike Muller",
        "subject": "Re: DJ Meteor - Stockholm",
        "date": "2022-09-21T18:13:12Z"
    }
}