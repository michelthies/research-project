==================== PROMPT ====================



Current Booking Object:
{
  "booking": {
    "status": null,
    "artist": {
      "name": null
    },
    "promoter": {
      "name": null,
      "company": null,
      "address": null
    },
    "event": {
      "date": null,
      "name": null,
      "city": null,
      "venue": null,
      "capacity": null,
      "ticketPrice": null,
      "openingTime": null,
      "closingTime": null,
      "stageTime": {
        "start": null,
        "end": null
      }
    },
    "invoice": {
      "amount": null,
      "status": null
    },
    "contract": {
      "status": null
    }
  }
}

New Message:
From: Olivia Chen <olivia@clubstellar.se>
Subject: DJ Meteor - Stockholm
Date: 8. July 2022 at 11:36:20 GMT+2
To: Mike Muller <mike@stellarbookings.com>

HELLO!!

Is she available for a daytime sessions in stockholm with DJ Pulse, Sofia Nyberg and Novawave the 6th of august? :)

xx
Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


==================== RESPONSE ====================

{
  "booking": {
    "status": null,
    "artist": {
      "name": "DJ Meteor"
    },
    "promoter": {
      "name": null,
      "company": "Club Stellar",
      "address": null
    },
    "event": {
      "date": "2022-08-06",
      "name": null,
      "city": "Stockholm",
      "venue": null,
      "capacity": null,
      "ticketPrice": null,
      "openingTime": null,
      "closingTime": null,
      "stageTime": {
        "start": "2022-08-06T09:00:00Z",
        "end": null
      }
    },
    "invoice": {
      "amount": null,
      "status": null
    },
    "contract": {
      "status": null
    }
  }
}

==================== PROMPT ====================



Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":"Club Stellar","address":null},"event":{"date":"2022-08-06","name":null,"city":"Stockholm","venue":null,"capacity":null,"ticketPrice":null,"openingTime":null,"closingTime":null,"stageTime":{"start":"2022-08-06T09:00:00Z","end":null}},"invoice":{"amount":null,"status":null},"contract":{"status":null}}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 12. July 2022 at 18:39:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

hey olivia,

could definitely work.

do you have these infos?

city:
venue name: 
event name: 
date of event:
doors open/close: 
requested slot: 
requested stage:
number of rooms/stages:
total capacity:
stage capacity:
ticket price: 
sponsoring:
line up: 
offer:


best
Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


==================== RESPONSE ====================

{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":"Club Stellar","address":null},"event":{"date":"2022-08-06","name":null,"city":"Stockholm","venue":null,"capacity":null,"ticketPrice":null,"openingTime":null,"closingTime":null,"stageTime":{"start":"2022-08-06T09:00:00Z","end":null}},"invoice":{"amount":null,"status":null},"contract":{"status":null,"city":"Stockholm","venueName":null,"eventName":null,"dateOfEvent":"2022-08-06","doorsOpenClose":null,"requestedSlot":null,"requestedStage":null,"numberOfRoomsStages":null,"totalCapacity":null,"stageCapacity":null,"ticketPrice":null,"sponsoring":null,"lineUp":null,"offer":null},"invoice":{"amount":null,"status":null},"contract":{"status":null}}}

==================== PROMPT ====================



Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":null,"company":"Club Stellar","address":null},"event":{"date":"2022-08-06","name":null,"city":"Stockholm","venue":null,"capacity":null,"ticketPrice":null,"openingTime":null,"closingTime":null,"stageTime":{"start":"2022-08-06T09:00:00Z","end":null}},"invoice":{"amount":null,"status":null},"contract":{"status":null}}}

New Message:
From: Olivia Chen <olivia@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 14. July 2022 at 12:05:44 GMT+2
To: Mike Muller <mike@stellarbookings.com>

With DJ Pulse, Novawave & Sofia Nyberg

20-22

offer 1000 ++++ 

COSMIC GARDEN
Venue Name: Cosmic Garden 
Venue Full Address: Hammarby Slussväg 2
Venue Phone Number: 0046 (0) 8 644 20 23
Venue Email: info@clubstellar.se
Capacity of the room where the artist would play: 500 
Venue Capacity: 1800 
Venue Doors Open: 17:00 
Venue Doors Close: 03:00
Soundsystem specification in this room: Function One + Custom made Sound roof (ask for specification) 


Any sound restrictions: No (but curfew has to be held!!) 

Past Guests in the last 6 months: Regis, DJ Bone, Taakaki Itoh, Exos, Tijana T, DJ Stingray, Matrixxman, Abdulla Rashim, Baba Stiltz, Janina and more....... Check website for more info please. 

Average ticket price: around 15€, free before 22

Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


==================== RESPONSE ====================

{
"booking": {
  "status": null,
  "artist": {
    "name": "DJ Meteor"
  },
  "promoter": {
    "name": "Olivia Chen",
    "company": "Club Stellar",
    "address": "Hammarby Slussväg 2"
  },
  "event": {
    "date": "2022-08-20",
    "name": null,
    "city": "Stockholm",
    "venue": "Cosmic Garden",
    "capacity": 500,
    "ticketPrice": 15,
    "openingTime": "17:00",
    "closingTime": "03:00",
    "stageTime": {
      "start": "2022-08-20T09:00:00Z",
      "end": null
    }
  }
},
"invoice": {
  "amount": null,
  "status": null
},
"contract": {
  "status": null
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z","end":null}}},"invoice":{"amount":null,"status":null},"contract":{"status":null}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 18. July 2022 at 00:54:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

hey olivia,

thanks for the infos.

we would be looking for at least 1500+++ here.
can you make it work?

best
Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/event/openingTime must match format "date-time" (actual: 17:00)
2. /booking/event/closingTime must match format "date-time" (actual: 03:00)

Context Errors:
1. booking.status: Missing field
2. booking.event.date: Incorrect value: 2022-08-20
3. booking.event.name: Missing field
4. booking.event.capacity: Incorrect value: 500
5. booking.event.stageTime.start: Incorrect value: 2022-08-20T09:00:00Z
6. booking.event.stageTime.end: Missing field
7. booking.invoice: Missing field
8. booking.contract: Missing field



==================== RESPONSE ====================

{
"booking": {
"status": null,
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Olivia Chen",
"company": "Club Stellar",
"address": "Hammarby Slussväg 2"
},
"event": {
"date": "2022-08-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 1500,
"ticketPrice": 15,
"openingTime": "2022-08-20T17:00:00Z",
"closingTime": "2022-08-20T03:00:00Z",
"stageTime": {
"start": "2022-08-20T09:00:00Z",
"end": null
}
},
"invoice": {
"amount": null,
"status": null
},
"contract": {
"status": null
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":null,"artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z","end":null}}},"invoice":{"amount":null,"status":null},"contract":{"status":null}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 18. July 2022 at 23:53:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

hey olivia,

sounds good, im sure we could make that work.


best
Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Parsing Error: Failed to evaluate



==================== RESPONSE ====================

{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

New Message:

From: Olivia Chen <olivia@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 19. July 2022 at 08:26:14 GMT+2
To: Mike Muller <mike@stellarbookings.com>

I need to announce this week :) 

Looping in Luna on CC for logistics. 

CONTACT
Contact Name Person (You): Olivia Chen 
Contact Email: olivia@clubstellar.se
Contact Cell phone: +46704671462

PROMOTER/COMPANY
Promoter Company Name: Nova Entertainment
Represented by: Club Stellar
Company Full Address (City): Hammarby Slussväg 2
Promoter Cell phone: +46704058257
Promoter Email: olivia@clubstellar.se
Company Website: www.clubstellar.com
VAT Number (Important): SE 556785-1901-01
ORG NUMMER. 556785-1901 

Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/event/openingTime must match format "date-time" (actual: 17:00)
2. /booking/event/closingTime must match format "date-time" (actual: 03:00)

Context Errors:
1. booking.status: Incorrect value: confirmed
2. booking.event.date: Incorrect value: 2022-08-20
3. booking.event.name: Missing field
4. booking.event.capacity: Incorrect value: 500
5. booking.event.stageTime.start: Incorrect value: 2022-08-20T09:00:00Z
6. booking.event.stageTime.end: Missing field
7. booking.invoice: Missing field
8. booking.contract: Missing field



==================== RESPONSE ====================

{
"booking": {
"status": "confirmed",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Olivia Chen",
"company": "Club Stellar",
"address": "Hammarby Slussväg 2",
"cellPhone": "+46704058257",
"email": "olivia@clubstellar.se",
"website": "www.clubstellar.com",
"vatNumber": "SE 556785-1901-01"
},
"event": {
"name": null,
"date": "2022-08-20",
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 500,
"ticketPrice": 15,
"openingTime": "2022-08-20T17:00:00Z",
"closingTime": "2022-08-20T03:00:00Z",
"stageTime": {
"start": "2022-08-20T09:00:00Z"
}
},
"invoice": {
"amount": null,
"status": "pending"
},
"contract": {
"status": "signed"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 20. July 2022 at 21:15:00 GMT+2
To: Olivia Chen <olivia@clubstellar.se>

works for her, lets confirm :)

Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Parsing Error: Failed to evaluate



==================== RESPONSE ====================

{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

New Message:
From: Luna Garcia <luna@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 21. July 2022 at 12:07:27 GMT+2
To: Olivia Chen <olivia@clubstellar.se>
Cc: Mike Muller <mike@stellarbookings.com>

Hi Mike,

Could you please send me:
- Their most up to date hospitality and technical rider
- Flight request (we will send you suggestions if you provide us with departure address and preferred timings) 
- Check in luggage or not


Best,
Luna

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/event/openingTime must match format "date-time" (actual: 17:00)
2. /booking/event/closingTime must match format "date-time" (actual: 03:00)

Context Errors:
1. booking.promoter.company: Incorrect value: Club Stellar
2. booking.promoter.address: Incorrect value: Hammarby Slussväg 2
3. booking.event.date: Incorrect value: 2022-08-20
4. booking.event.name: Missing field
5. booking.event.capacity: Incorrect value: 500
6. booking.event.stageTime.start: Incorrect value: 2022-08-20T09:00:00Z
7. booking.event.stageTime.end: Missing field
8. booking.invoice: Missing field
9. booking.contract: Missing field



==================== RESPONSE ====================

{
"booking": {
"status": "confirmed",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Olivia Chen",
"company": "Club Stellar",
"address": "Hammarby Slussväg 2"
},
"event": {
"date": "2022-08-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 500,
"ticketPrice": 15,
"openingTime": "2022-08-20T17:00:00Z",
"closingTime": "2022-08-20T03:00:00Z",
"stageTime": {
"start": "2022-08-20T09:00:00Z"
}
},
"invoice": {
"amount": null,
"status": "pending"
},
"contract": {
"status": "signed"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 23. July 2022 at 16:17:00 GMT+2
To: Luna Garcia <luna@clubstellar.se>
Cc: Olivia Chen <olivia@clubstellar.se>

hey luna,

please book hotel with double bed (kingsize)

- Flight request:
london - stockholm - berlin
only handluggage

Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Parsing Error: Failed to evaluate



==================== RESPONSE ====================

{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"},"travel":{"flight":{"origin":"London","destination":["Stockholm","Berlin"],"luggage":"handluggage"},"accommodation":{"bedType":"double"}}}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}}

New Message:
From: Luna Garcia <luna@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 31. July 2022 at 21:02:16 GMT+2
To: Mike Muller <mike@stellarbookings.com>
Cc: Olivia Chen <olivia@clubstellar.se>

Hi Mike, 

Please see flight ticket attached and all updated info below:

FLIGHTS
6th Aug 
FLIGHT NO: D84456 (14:10 London-Gatwick -17:45 Stockholm-Arlanda (2h35m)

7th Aug
FLIGHT NO: SK 2677 (Stockholm ARN- Berlin BER 13:00- 14:30 (1h 30m)

ARTIST LIAISON 
Olivia Chen +46 70-467 14 62
Marco Rivera +46 70-330 51 44
 
GROUND TRANSPORT
NordTaxi (company) +46 855013188
 
NAME: Emily Webb + +49176 32742979 
DATE: 6 Aug
TIME: 17.45
WHERE: Arlanda - (Driver wait w sign by arrivals exit) 
TO: Straight to venue/Hotel?
FLIGHT NO: D84456 (14:10 London-Gatwick -17:45 Stockholm-Arlanda (2h35m)

NAME: Emily Webb + +49176 32742979 
DATE: 7 aug
TIME: 09.45
WHERE: Horizon Hotel, Ringvägen 98 (Driver wait w sign by hotel exit) 
TO: Arlanda - 
FLIGHT NO: SK 2677 (Stockholm ARN- Berlin BER 13:00- 14:30 (1h 30m)
 
Nearest Airport: Stockholm Arlanda Airport
Distance Airport - Hotel (km/h): around 45min - 1,15h depending on traffic
Distance Airport - Venue (km/h): around 45min - 1,15h depending on traffic
Distance Hotel - Venue (km/h): 5 min walk, or 5 min taxi
 
HOTEL 
Horizon Hotel Stockholm
Ringvägen 98, 104 60 Stockholm, Sweden 
TEL: +46 8 462 10 00
WEBB: https://www.horizonhotels.com/hotels/sweden/stockholm/horizon-hotel-stockholm/
BOOKING REF: 2059R008892 - Emily Webb
 
RUNNING ORDER 
DTS:
14-17 SOFIA NYBERG
17-19 DJ PULSE
19-20 NOVAWAVE (LIVE)
20-22 DJ METEOR
NTS:
22-03 COSMIC UNITY EVENT 
 
DINNER 
22.00 @ Greenspace, fine dining vegan restaurant at the venue

FB: https://fb.me/e/2PYarQLHm
RA: https://ra.co/events/1565693


Best,
Luna


Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Parsing Error: Failed to evaluate



==================== RESPONSE ====================

{
"booking": {
"status": "confirmed",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Olivia Chen",
"company": "Club Stellar",
"address": "Hammarby Slussväg 2"
},
"event": {
"date": "2022-08-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 500,
"ticketPrice": 15,
"openingTime": "17:00",
"closingTime": "03:00",
"stageTime": {
"start": "2022-08-20T09:00:00Z"
}
},
"invoice": {
"amount": null,
"status": "pending"
},
"contract": {
"status": "signed"
}
},
"invoice": {
"amount": 0,
"status": "paid"
},
"stageTime": {
"start": "2022-08-20T09:00:00Z",
"end": "2022-08-20T22:00:00Z"
},
"runningOrder": [
{
"name": "SOFIA NYBERG",
"time": "14-17"
},
{
"name": "DJ PULSE",
"time": "17-19"
},
{
"name": "NOVAWAVE (LIVE)",
"time": "19-20"
},
{
"name": "DJ METEOR",
"time": "20-22"
},
{
"name": "COSMIC UNITY EVENT",
"time": "22-03"
}
],
"dinner": {
"date": "2022-08-20",
"time": "22:00",
"location": "Greenspace, fine dining vegan restaurant at the venue"
},
"transportation": [
{
"driver": "NordTaxi (company)",
"phone": "+46 855013188",
"name": "Emily Webb",
"date": "2022-08-06",
"time": "17:45",
"location": "Arlanda - (Driver wait w sign by arrivals exit) TO: Straight to venue/Hotel?"
},
{
"driver": "NordTaxi (company)",
"phone": "+46 855013188",
"name": "Emily Webb",
"date": "2022-08-07",
"time": "09:45",
"location": "Horizon Hotel, Ringvägen 98 (Driver wait w sign by hotel exit) TO: Arlanda -"
}
],
"hotel": {
"name": "Horizon Hotel Stockholm",
"address": "Ringvägen 98, 104 60 Stockholm, Sweden",
"phone": "+46 8 462 10 00",
"url": "https://www.horizonhotels.com/hotels/sweden/stockholm/horizon-hotel-stockholm/"
}
}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"17:00","closingTime":"03:00","stageTime":{"start":"2022-08-20T09:00:00Z"}},"invoice":{"amount":null,"status":"pending"},"contract":{"status":"signed"}},"invoice":{"amount":0,"status":"paid"},"stageTime":{"start":"2022-08-20T09:00:00Z","end":"2022-08-20T22:00:00Z"},"runningOrder":[{"name":"SOFIA NYBERG","time":"14-17"},{"name":"DJ PULSE","time":"17-19"},{"name":"NOVAWAVE (LIVE)","time":"19-20"},{"name":"DJ METEOR","time":"20-22"},{"name":"COSMIC UNITY EVENT","time":"22-03"}],"dinner":{"date":"2022-08-20","time":"22:00","location":"Greenspace, fine dining vegan restaurant at the venue"},"transportation":[{"driver":"NordTaxi (company)","phone":"+46 855013188","name":"Emily Webb","date":"2022-08-06","time":"17:45","location":"Arlanda - (Driver wait w sign by arrivals exit) TO: Straight to venue/Hotel?"},{"driver":"NordTaxi (company)","phone":"+46 855013188","name":"Emily Webb","date":"2022-08-07","time":"09:45","location":"Horizon Hotel, Ringvägen 98 (Driver wait w sign by hotel exit) TO: Arlanda -"}],"hotel":{"name":"Horizon Hotel Stockholm","address":"Ringvägen 98, 104 60 Stockholm, Sweden","phone":"+46 8 462 10 00","url":"https://www.horizonhotels.com/hotels/sweden/stockholm/horizon-hotel-stockholm/"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 8. August 2022 at 12:23:00 GMT+2
To: Luna Garcia <luna@clubstellar.se>
Cc: Olivia Chen <olivia@clubstellar.se>

hey luna,

hope all is well.

find the artist fee invoice attached.
the booking fee will follow.


best


Best,
________________________

Mike Muller
Booking
mobile: +491634523464

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/event/openingTime must match format "date-time" (actual: 17:00)
2. /booking/event/closingTime must match format "date-time" (actual: 03:00)
3. /booking/invoice/status must be equal to one of the allowed values (actual: pending)
4. /booking/invoice/status must be null (actual: pending)
5. /booking/invoice/status must match exactly one schema in oneOf (actual: pending)

Context Errors:
1. booking.promoter.company: Incorrect value: Club Stellar
2. booking.promoter.address: Incorrect value: Hammarby Slussväg 2
3. booking.event.date: Incorrect value: 2022-08-20
4. booking.event.name: Missing field
5. booking.event.capacity: Incorrect value: 500
6. booking.event.stageTime.start: Incorrect value: 2022-08-20T09:00:00Z
7. booking.event.stageTime.end: Missing field
8. booking.invoice.amount: Missing field
9. booking.invoice.status: Incorrect value: pending
10. booking.contract.status: Incorrect value: signed



==================== RESPONSE ====================

{
"booking": {
"status": "confirmed",
"artist": {
"name": "DJ Meteor"
},
"promoter": {
"name": "Olivia Chen",
"company": "Club Stellar",
"address": "Hammarby Slussväg 2"
},
"event": {
"date": "2022-08-20",
"name": null,
"city": "Stockholm",
"venue": "Cosmic Garden",
"capacity": 500,
"ticketPrice": 15,
"openingTime": "2022-08-20T17:00:00Z",
"closingTime": "2022-08-20T03:00:00Z",
"stageTime": {
"start": "2022-08-20T09:00:00Z",
"end": null
}
},
"invoice": {
"amount": 0,
"status": "paid"
},
"contract": {
"status": "signed"
}
},
"invoice": {
"amount": 0,
"status": "paid"
},
"stageTime": {
"start": "2022-08-20T09:00:00Z",
"end": null
},
"runningOrder": [
{
"name": "SOFIA NYBERG",
"time": "14-17"
},
{
"name": "DJ PULSE",
"time": "17-19"
},
{
"name": "NOVAWAVE (LIVE)",
"time": "19-20"
},
{
"name": "DJ METEOR",
"time": "20-22"
},
{
"name": "COSMIC UNITY EVENT",
"time": "22-03"
}
],
"dinner": {
"date": "2022-08-20",
"time": "22:00",
"location": "Greenspace, fine dining vegan restaurant at the venue"
},
"transportation": [
{
"driver": "NordTaxi (company)",
"phone": "+46 855013188",
"name": "Emily Webb",
"date": "2022-08-06",
"time": "17:45",
"location": "Arlanda - (Driver wait w sign by arrivals exit) TO: Straight to venue/Hotel?"
},
{
"driver": "NordTaxi (company)",
"phone": "+46 855013188",
"name": "Emily Webb",
"date": "2022-08-07",
"time": "09:45",
"location": "Horizon Hotel, Ringvägen 98 (Driver wait w sign by hotel exit) TO: Arlanda -"
}
],
"hotel": {
"name": "Horizon Hotel Stockholm",
"address": "Ringvägen 98, 104 60 Stockholm, Sweden",
"phone": "+46 8 462 10 00",
"url": "https://www.horizonhotels.com/hotels/sweden/stockholm/horizon-hotel-stockholm/"
}
}

==================== PROMPT ====================



Current Booking Object:
{"booking":{"status":"confirmed","artist":{"name":"DJ Meteor"},"promoter":{"name":"Olivia Chen","company":"Club Stellar","address":"Hammarby Slussväg 2"},"event":{"date":"2022-08-20","name":null,"city":"Stockholm","venue":"Cosmic Garden","capacity":500,"ticketPrice":15,"openingTime":"2022-08-20T17:00:00Z","closingTime":"2022-08-20T03:00:00Z","stageTime":{"start":"2022-08-20T09:00:00Z","end":null}},"invoice":{"amount":0,"status":"paid"},"contract":{"status":"signed"}},"invoice":{"amount":0,"status":"paid"},"stageTime":{"start":"2022-08-20T09:00:00Z","end":null},"runningOrder":[{"name":"SOFIA NYBERG","time":"14-17"},{"name":"DJ PULSE","time":"17-19"},{"name":"NOVAWAVE (LIVE)","time":"19-20"},{"name":"DJ METEOR","time":"20-22"},{"name":"COSMIC UNITY EVENT","time":"22-03"}],"dinner":{"date":"2022-08-20","time":"22:00","location":"Greenspace, fine dining vegan restaurant at the venue"},"transportation":[{"driver":"NordTaxi (company)","phone":"+46 855013188","name":"Emily Webb","date":"2022-08-06","time":"17:45","location":"Arlanda - (Driver wait w sign by arrivals exit) TO: Straight to venue/Hotel?"},{"driver":"NordTaxi (company)","phone":"+46 855013188","name":"Emily Webb","date":"2022-08-07","time":"09:45","location":"Horizon Hotel, Ringvägen 98 (Driver wait w sign by hotel exit) TO: Arlanda -"}],"hotel":{"name":"Horizon Hotel Stockholm","address":"Ringvägen 98, 104 60 Stockholm, Sweden","phone":"+46 8 462 10 00","url":"https://www.horizonhotels.com/hotels/sweden/stockholm/horizon-hotel-stockholm/"}}

New Message:
From: Olivia Chen <olivia@clubstellar.se>
Subject: Re: DJ Meteor - Stockholm
Date: 8. August 2022 at 12:24:46 GMT+2
To: Mike Muller <mike@stellarbookings.com>
Cc: Luna Garcia <luna@clubstellar.se>

Set for payment!

Olivia

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


==================== RESPONSE ====================

{"booking":{"status":"paid"},"invoice":{"amount":0,"status":"paid"}}

==================== PROMPT ====================




Current Booking Object:
{"booking":{"status":"paid"},"invoice":{"amount":0,"status":"paid"}}

New Message:
From: Mike Muller <mike@stellarbookings.com>
Subject: Re: DJ Meteor - Stockholm
Date: 21. September 2022 at 18:13:12 GMT+2
To: Luna Garcia <luna@clubstellar.se>
Cc: Olivia Chen <olivia@clubstellar.se>

hey luna,

payment received.

Best,
________________________

Mike Muller
Booking
mobile: +491634523464 

Extract the relevant booking data from the message and return the updated booking object accordingly.
Your response must contain ONLY a valid JSON object.
DO NOT include any comments, explanations, introductions, conclusions, prefix, suffix, or anything else.

  
Extract booking information from this email.

IMPORTANT: This task requires a self-verification approach with two distinct reasoning steps:

STEP 1 - FORWARD REASONING:
- Extract all relevant booking information from the email
- Follow the schema structure precisely
- Apply formatting requirements (dates in ISO format, etc.)
- Consider previous data when information is not mentioned

STEP 2 - BACKWARD VERIFICATION:
- For each extracted field, verify that it is supported by evidence in the original email
- If the original email doesn't support a field value, revert to previous data
- Check that conclusions follow logically from the premises (e.g., status changes make sense)
- Verify that all values meet the schema's data type and format requirements
- Confirm that all enum values are valid (status fields use allowed values)

This dual-process approach prevents reasoning errors from propagating through your analysis.
Your final output should only reflect information that passes this verification.

IMPORTANT DATE FORMAT REQUIREMENTS:
- All dates must be in ISO format: YYYY-MM-DD (example: 2025-11-25)
- All date-times must be in ISO format: YYYY-MM-DDThh:mm:ssZ (example: 2025-11-25T00:00:00Z)
- Stage times must include the full date-time format (not just the time portion)

CONTEXT RULES:
1. When new information contradicts existing data, use the new information only if verified
2. When information is not mentioned in the new email, preserve data from the previous extraction
3. Always update status fields when mentioned and verified (booking status, invoice status, contract status)

DO NOT include any verification steps or reasoning in your output.
ONLY return the final verified JSON with no other text.


Current Booking Object Evaluation Errors:
Schema Errors:
1. /booking/status must be equal to one of the allowed values (actual: paid)
2. /booking/status must be null (actual: paid)
3. /booking/status must match exactly one schema in oneOf (actual: paid)

Context Errors:
1. booking.status: Incorrect value: paid
2. booking.artist: Missing field
3. booking.promoter: Missing field
4. booking.event: Missing field
5. booking.invoice: Missing field
6. booking.contract: Missing field



==================== RESPONSE ====================

{"booking":{"status":"paid"}}